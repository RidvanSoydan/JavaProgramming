Java Day53
Topics:	1. Build in functional interfaces:

            • Predicate => Represents a function which takes one argument (any object) and returns boolean
            • Consumer  => Represents a function which takes one argument (any object) and does not return a value
            • Function  => Represents a function which takes one argument (any object) and return a value (any object)
            • BiPredicate => Represents a function which takes two arguments (any objects) and returns boolean
            • BiConsumer  => Represents a function which takes two argument (any object) and does not return a value
            • BiFunction  => Represents a function which takes two arguments (any objects) and return a value (any object)


		2. Stream


package name: day53_FunctionalInterface

Warmup tasks:
	1. Go to Package day53_FunctionalInterface -> MapPractice
			Complete all the given task requirements

	2. Create a Functional interface named MyThirdFunctionalInterface that has an abstract method takes one argument of any type and returns the same type

		2.1 Create a class named Test and use the custom functional interface above to create the following functions:
				1. Create a function that takes one integer and returns the cube of the given argument
				2. Create a function that takes a String and returns the reversed value of the given argument

