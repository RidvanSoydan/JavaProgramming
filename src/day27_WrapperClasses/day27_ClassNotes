Java Day27
Topic: Wrapper Classes

package: day27_WrapperClasses

warmup tasks:

	1. Replace Task:

		1.1 Create a method named replace that passes three parameters: integer array, integer index, integer newElement. The method replaces the element of the array at given index with the new element, and returns the new array.
				Ex:
					arr = {1,2,3,4,5};

					replace(arr, 2, 30) ===> {1, 2, 30, 4, 5}


		1.2 Create the same functions for double arrays, char arrays, and String arrays


	2. ReplaceAll Task:

		2.1 Create a method named replaceAll that passes three parameters: integer array, integer oldElement, integer newElement. The method replaces all the element of the array that matching with the given old element with the given new element, and returns the new array.
			Ex:
				arr = {10, 10, 20, 30, 40, 30, 30, 30};

				replaceAll(arr, 30, 300) ==> {10, 10, 20, 300, 40, 300, 300, 300}


		2.2 Create the same functions for double arrays, char arrays, and String arrays


Wrapper classes: * There are 8 wrapper classes in Java...dedicated to 8 primitives
                 * Presented in “java.lang” package ==> You don't need to import, it will be imported implicitly
                 * String is also in this package
                 * Wrapper classes are used to “wrap” (convert) the primitive data type into an object of that class
                 * Provide the mechanism to convert primitive into object and object into primitive...
                    (Because of data structures == > Array, Collection, Map)

                    Data Structures:
      	            1. Array: supports primitives & non primitives
                    2. Collection: ONLY support non-primitives
                    3. Map: ONLY support non-primitives

            Primitives              Wrapper Classes

            byte                    Byte
            short                   Short
            int                     Integer
            long                    Long
            float                   Float
            double                  Double
            char                    Character
            boolean                 Boolean


Autoboxing ==> converts primitive into wrapper class object
Unboxing   ==> converts wrapper class object into primitive


Wrapper classes:

		1. parse methods: converts String to primitive

		2. valueOf methods: converts String to wrapper class

        "12345" ==> You cannot use in math calculation...You have to convert it primitive with parse method...



Password Validation:

    Write a program that can verify if a password is a strong password. Characteristics of strong passwords are:

                1. Password MUST be at least have 8 characters long, and should not contain space
                2. PassWord should at least contain one upper case letter
                3. PassWord should at least contain one lower case letter
                4. Password should at least contain one special characters
                5. Password should at least contain a digit







