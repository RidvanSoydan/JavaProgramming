Java Day28
Topic: ArrayList

package name: day28_ArrayList


Warmup tasks:

	1.Write a program that can verify if a password is a strong password. Characteristics of strong passwords are:

        1.1 Password must be at least have 8 characters long, and should not contain space
        1.2 PassWord should at least contain one upper case letter
        1.3 PassWord should at least contain one lower case letter
        1.4 Password should at least contain one special characters
        1.5 Password should at least contain a digit


    Insert:

	    arr = {1, 2, 3, 4, 5};

	    insert (arr, 2, 40) ==> {1, 2, 40, 3, 4, 5 }



Data Structure  :

	Array       : Size is fixed, (If you try to change the size, you have to create new Array)
	              Supports both primitives & non primitives

	Collection  : Size is dynamic,
	              Does not support primitives
                  Collection has multiple interfaces and multiple classes

        ArrayList   : Part of the collection (Grand child of collection)
                      Allows us to store objects
                      Size is dynamic (You can add or remove elements from object, size will automatically adjusted)
                      Does not support primitives (int cannot be used, Integer must be used)
                      Internally uses the array (Special class) ==> Because of this class was named as ArrayList
                      Fastest class than the other collection classes when trying to retrieve any element
                      Presented in "java.util" package, you need to import it...

        Creating an ArrayList   :

                      ArrayList < DataType > name = new ArrayList < DataType > ();
                                  Mandatory                         Optional

                      Data type of the ArrayList can not be a primitive type
                      Name must be meaningfull and readable
                      Data Types must match between each other, if not it will give compile error...

                      One of the main advantages of Arraylist according to Array is;
                                * ArrayList has lots of method...
                                * Size is dynamic
ArrayList Methods       :

	add(Data)           : adds the data after the last index of the ArrayList

	add(index, Data)    : inserts the data at the given index

	size()              : returns the total number of elements

	get(index)          : returns the element at the given index

	set(index,  Data)   : replaces the element at given index with the new element.

	remove(int index)   : removes the element at the given index

	remove(Object)      : removes the given object from arraylist, returns boolean

	clear()             : remove all the elements of the arraylist, size will be 0

	indexOf(Data)       : returns the first matching element's index number, returns int

	lastIndexOf(Data)   : returns the last matching element's index number, returns int

	contains(Data)      : returns true if the element is contained in the arraylist, otherwise returns false

	equals(ArrayList)   : returns true if two arraylists are equal (same elements in same order), otherwise returns false

    Bulk Operations     : containsAll(), addAll(), removeAll(), retainAll()

                            containsAll() ==> Allows to check multiple elements contained or not in the ArrayList
                            addAll(),     ==> Allows to add multiple elements to the ArrayList
                            removeAll()   ==> Allows to remove multiple elements from ArrayList, removes matching ones
                            retainAll()   ==> Allows to remove multiple elements from ArrayList, removes unmatching ones

                            ***** In order to use these methods we need to use asList() method from Arrays Utility class.
                                      exp ==>  numbers.addAll(Arrays.asList(1,2,3,4,5,6,7) );


    *** All methods in ArrayList will be used in the Collections as well....



