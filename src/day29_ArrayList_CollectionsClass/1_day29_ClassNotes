
Java Day29

Topic: ArrayList Continue
	   Collections Utility Class


    warmup tasks:

	1. Write a program that can return the first unique elements from an arraylist
			Do not use indexOf & lastIndexOf methods

	2. Write a program that can find the maximum, minimum and average number from an arrayList of integers


Bulk Operations                 : argument MUST be a collection type

	addAll(CollectionType)      : adds collection of values to the arrayList
	removeAll(CollectionType)   : removes all the matching elements from the arraylist
	retainAll(CollectionType)   : removes all the non-matching elements from the arraylist
	containsAll(CollectionType) : checks if all the elements are contained in the arraylist


Arrays:

	asList (array of values)     : returns the array as collectionType

        String[] names = {"Mary", "Monica", "Mehray", "Musti", "Sumeyra", "Hasan", "Beril"};
        ArrayList<String> list = new ArrayList<>( Arrays.asList(names) );


Remove Functions    :

	remove()        : when we remove one element. DO NOT use it in the loop, it does not work properly
	removeAll()     : when we remove multiple elements ( if the elements that we want to remove are known)
	retainAll()     : when we want to retain multiple elements (if the elements that we want to keep are known)
	removeIf()      : when we remove under a condition (if the elements we want to remove are unknown)


Collections         : utility class of collection
                      imported from java.util.Collections

	sort()          : sorts the collections in ascending order ==>  Collections.sort(list);
	reverse()       : reverses the collections ==>  Collections.reverse(list2);
	swap            : swaps the elements in two indexes ==> ( Collections.swap (collection, index, index) )
	max()           : returns the max number ==> return type is int
	min()           : returns the min number ==> return type is int
	replaceAll()    : replaces all matching elements ==> ( Collections.replaceAll (collection, oldValue, newValue))
	frequency()     : counts the frequency of elements, returns int ==> ( Collections.frequency (collection, element))



Array vs ArrayList  : both has index numbers

		ArrayList   : size is not fixed
				      only supports non-primitives
				      Can not be multi-dimensional

		Array       : size is fixed
			          supports both primitives & non-primitives
			          Can be multi-Dimensional



1. write a program that can return the nth largest number from an arraylist

			arraylist = {1, 2, 3, 4, 5, 6, 7, 7, 8, 8}
			n = 5

			output:
				4